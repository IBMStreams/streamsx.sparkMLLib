
<project name="streamsx.sparkMLLib" default="all">
	<description>Build file for streamsx.sparkmllib project, built the toolkits.</description>
	
	<!-- check streams install -->
	<property environment="env" />
	<!-- Exit if there is a bad value in streams.install -->
	<fail unless="env.STREAMS_INSTALL" message="No streams installation found. Exiting!"/>
	<!-- set global properties for this build -->
	<property name="toolkit.dir"     value="com.ibm.streamsx.sparkmllib" />
	<property name="toolkit.test"    value="tests" />
	<property name="doc.string"      value="doc"/>
	<property name="doc.dir"         value="doc/spldoc" />
	<property name="samples.dir"     value="samples" />
	<property name="spl-mt"          value="${env.STREAMS_INSTALL}/bin/spl-make-toolkit"/>
	<property name="spl-md"          value="${env.STREAMS_INSTALL}/bin/spl-make-doc"/>
	<property name="release.dir"     value="release"/>

	<!-- Create the time stamp -->
	<tstamp/>

	<!-- Extract the git commit hash -->
	<exec executable="git" outputproperty="commithash">
		<arg value="rev-parse" />
		<arg value="--short" />
		<arg value="HEAD" />
	</exec>
	
	<!-- these targets are here due to compatibility -->
	<target name="all"   depends="doc"                     description="Build all toolkit artifacts and spl docs - incremental build"/>
	<target name="clean" depends="toolkit-clean,doc-clean" description="Clean all generated and downloaded toolkit files, clean samples and clean the documentation"/>

	<target name="toolkit" description="Build toolkit code and index the toolkit - incremental build.">
		<ant dir="${toolkit.dir}" target="all" />
	</target>
	
	<target name="toolkit-clean" depends="samples-clean" description="Clean all generated and downloaded toolkit files and cleans samples">
		<ant dir="${toolkit.dir}" target="clean" />
		<delete dir="${tmp}" />
	</target>

	<target name="doc" depends="toolkit"
		description="Generate the toolkit documentation">
		<property name="tktitle" value="IBMStreams ${ant.project.name} Toolkit" />
		<property name="tkauthor" value="IBMStreams Open Source Community at GitHub - https://github.com/IBMStreams/${ant.project.name}" />
		<echo message="Tookit to SPLDOC: ${doc.dir}" />
		<exec executable="${spl-md}">
			<arg value="--include-composite-operator-diagram" />
			<arg value="--author" />
			<arg value="${tkauthor}" />
			<arg value="--doc-title" />
			<arg value="${tktitle}" />
			<arg value="--directory" />
			<arg value="${toolkit.dir}" />
			<arg value="--copy-image-files" />
			<arg value="--output-directory" />
			<arg value="${doc.dir}" />
		</exec>
	</target>
	
	<target name="doc-clean"
		description="Clean the toolkit documentation">
		<delete dir="${doc.dir}"/>
	</target>
	
	<!-- Test targets -->
	<target name="test" depends="toolkit"
		description="Execute the toolkit test">
		<!-- <ant dir="${toolkit.test}" target="all" /> -->
		<echo message="Check if toolkit is compile clean"/>
		<antcall target="samples"/>
	</target>


	<!-- Targets called on samples -->
	<target name="samples" depends="toolkit"
		description="Build all samples">
		<subant target="samplebuild" genericantfile="${basedir}/build.xml" failonerror="true">
			<dirset dir="${samples.dir}" includes="*"/>
		</subant>
	</target>
	
	<target name="samples-clean"
		description="Clean all samples">
		<subant target="sampleclean" genericantfile="${basedir}/build.xml" failonerror="true">
			<dirset dir="${samples.dir}" includes="*"/>
		</subant>
	</target>
	
	<target name="samplebuild">
		<echo message="Sample to build: ${basedir}"/>
		<exec executable="make" failonerror="true" dir="${basedir}">
			<arg value="-f"/>
			<arg value="Makefile"/>
			<arg value="build"/>
		</exec>
	</target>
	
	<target name="sampleclean">
		<echo message="Sample to clean: ${basedir}"/>
		 <exec executable="make" failonerror="true" dir="${basedir}">
			<arg value="-f"/>
			<arg value="Makefile"/>
			<arg value="clean"/>
		</exec>
	</target>
	
	<!-- Targets to build releases -->
	<target name="release" depends="clean" description="Make a toolkit release archive">
		<antcall target="doc"/>
		<antcall target="samples"/> <!-- check if samples are compile clean -->
		<antcall target="samples-clean"/> <!-- remove samples build artifacts -->
		<mkdir dir="${release.dir}"/>
		<xmlproperty file="${toolkit.dir}/info.xml" prefix="tkinfo" keepRoot="no"/>
		<echo message="Make releasefile Toolkit Version: ${tkinfo.info:identity.info:version}"/>
		<property name="releasefilename" value="${release.dir}/${ant.project.name}-${tkinfo.info:identity.info:version}-${commithash}-${DSTAMP}-${TSTAMP}.tgz"/>
		<tar compression="gzip" longfile="gnu"
			destfile="${releasefilename}"
			basedir="${basedir}"
			includes="${toolkit.dir}/** ${samples.dir}/** ${doc.string}/** README.md LICENSE"
			excludes="**/.toolkitList **/.gitignore ${toolkit.dir}/.settings/ ${toolkit.dir}/.project ${toolkit.dir}/.classpath ${toolkit.dir}/build.xml ${toolkit.dir}/pom.xml ${toolkit.dir}/impl/java/ **/opt/downloaded/** ${release.dir}/** ${samples.dir}/*/output/ tmp/**"
		/>
		<checksum file="${releasefilename}"/>
		<checksum algorithm="sha1" file="${releasefilename}"/>
	</target>
</project>